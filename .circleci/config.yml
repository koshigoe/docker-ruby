version: 2.1

workflows:
  version: 2
  ci:
    jobs:
      - build

  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - main
    jobs:
      - build

jobs:
  build:
    docker:
      - image: cimg/base:2021.02
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
        environment:
          CONTAINER_REPOSITORY: koshigoe/ruby
          BUILT_TAG: built
    steps:
      - checkout
      - setup_remote_docker:
          version: 18.09.3
      - run:
          name: build container image
          command: |
            echo "export BUILT_IMAGE=${CONTAINER_REPOSITORY}:${BUILT_TAG}" >> $BASH_ENV
            source $BASH_ENV

            docker build -f 2.7/amzn2/Dockerfile -t ${BUILT_IMAGE} 2.7/amzn2
      - run:
          name: make container image tag
          command: |
            RUBY_VERSION=$(docker run --rm ${BUILT_IMAGE} ruby -e "puts RUBY_VERSION")
            AMAZONLINUX_VERSION=$(docker run --rm ${BUILT_IMAGE} grep image_file= /etc/image-id | cut -d- -f4)
            IMAGE_TAG_SHORT=${RUBY_VERSION}-amzn2
            IMAGE_TAG_LONG=${RUBY_VERSION}-amzn${AMAZONLINUX_VERSION}-b${CIRCLE_BUILD_NUM}

            cat \<<EOF >> $BASH_ENV
            export RUBY_VERSION=$RUBY_VERSION
            export AMAZONLINUX_VERSION=$AMAZONLINUX_VERSION
            export IMAGE_TAG_SHORT=$IMAGE_TAG_SHORT
            export IMAGE_TAG_LONG=$IMAGE_TAG_LONG
            EOF
      - deploy:
          name: push container image
          command: |
            cat \<<EOF
            Ruby version:   $RUBY_VERSION
            Amazon Linux 2: $AMAZONLINUX_VERSION
            Short Tag:      $IMAGE_TAG_SHORT
            Long Tag:       $IMAGE_TAG_LONG
            EOF

            if [ "$CIRCLE_BRANCH" = "main" ]; then
              docker tag ${BUILT_IMAGE} ${CONTAINER_REPOSITORY}:${IMAGE_TAG_SHORT}
              docker tag ${BUILT_IMAGE} ${CONTAINER_REPOSITORY}:${IMAGE_TAG_LONG}

              echo ${DOCKERHUB_PASSWORD} | docker login -u ${DOCKERHUB_USERNAME} --password-stdin
              docker push ${CONTAINER_REPOSITORY}:${IMAGE_TAG_LONG}
              docker push ${CONTAINER_REPOSITORY}:${IMAGE_TAG_SHORT}
            fi
